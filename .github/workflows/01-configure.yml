name: 01 - Configure

on:
  workflow_dispatch:
    inputs:
      folder_name:
        description: 'folder name'
        default: 'test-www'
      git_files:
        description: 'Use external folder for Git Files'
        type: choice
        default: 'config_git_files'
        options:
          - config
          - git_files
          - config_git_files
      docker_user:
        description: 'docker user for creating image name'
        default: 'pknw1'
      docker_image:
        description: 'the output docker image name'
        default: 'image'
      docker_registry:
        description: 'whther to use the dokcer registry '
        type: boolean
        default: true
      privileged:
        description: 'Run in privileged '
        type: boolean
        default: 'false'
      docker_network:
        description: 'Docker Network'
        type: choice
        required: true
        default: 'proxy'
        options:
          - proxy
          - admin
          - proxy_admin
          - host
      vhost_name:
        description: 'URL'
        default: '.pknw1.co.uk'
      vhost_port:
        description: 'Virtual Port'
        default: '80'
  
jobs:
  init:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ORG_TOKEN }}
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - uses: action-pack/set-variable@v1
        with:
          name: 'repo_name'
          value: '${{ steps.repo-name.outputs.repository-name }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'folder_name'
          value: 'foldr_name'
          token: ${{ secrets.GH_ORG_TOKEN }}

      - uses: action-pack/set-variable@v1
        with:
          name: 'git_files'
          value: 'false'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        if: ${{ inputs.git_files == 'git_files'}}
        with:
          name: 'git_files'
          value: 'true'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        if: ${{ inputs.git_files == 'config_git_files'}}
        with:
          name: 'git_files'
          value: 'true'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'config_folder'
          value: 'false'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        if: ${{ inputs.git_files == 'config_git_files'}}
        with:
          name: 'config_folder'
          value: 'true'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_user'
          value: ${{ inputs.docker_user }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_image'
          value: ${{ inputs.docker_image }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_tag'
          value: 'latest'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_registry'
          value: ${{ inputs.docker_registry }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'privileged'
          value: ${{ inputs.privileged }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_network'
          value: ${{ inputs.docker_network }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'vhost_name'
          value: ${{ inputs.vhost_name }}
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'vhost_port'
          value: ${{ inputs.vhost_port }}
          token: ${{ secrets.GH_ORG_TOKEN }}
