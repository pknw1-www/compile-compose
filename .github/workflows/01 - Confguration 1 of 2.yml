name: 01 -  Confguration 1 of 2

on:
  workflow_dispatch:
    inputs:
      configure_base_folder:
        default: 'build-image'
      configure_git_files:
        default: true
      configure_config_folder:
        default: true
      configure_mounts:
        type: choice
        options:
          - system
          - fuse
          - media
          - system fuse
          - system media
          - fuse media
          - all
      docker_image_owner:
        default: 'pknw1'
      docker_image_name:
        default: 'build_image'
      docker_image_tag:
        default: 'latest'
      docker_image_registry:
        default: true
      docker_networks :
        default: 'both'
        type: choice
        options:
          - proxy
          - admin
          - host
          - both

jobs:
  display_inputs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ORG_TOKEN }}
      - name: summarise inputs
        run: |
          echo "## Base Input Values" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.configure_base_folder }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.configure_git_files }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.configure_config_folder }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.configure_mounts }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.docker_image_owner }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.docker_image_name }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.docker_image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.docker_image_registry }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ inputs.docker_networks }}" >> $GITHUB_STEP_SUMMARY

  store_inputs:
    runs-on: ubuntu-latest
    needs: display_inputs
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ORG_TOKEN }}
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - uses: action-pack/set-variable@v1
        with:
          name: 'repo_name'
          value: '${{ steps.repo-name.outputs.repository-name }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'configure_base_folder'
          value: '${{ inputs.configure_base_folder }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'configure_git_files'
          value: '${{ inputs.configure_git_files }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'configure_config_folder'
          value: '${{ inputs.configure_config_folder }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'configure_mounts'
          value: '${{ inputs.configure_mounts }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_image_owner'
          value: '${{ inputs.docker_image_owner }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_image_name'
          value: '${{ inputs.docker_image_name }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_image_tag'
          value: '${{ inputs.docker_image_tag }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_image_registry'
          value: '${{ inputs.docker_image_registry }}'
          token: ${{ secrets.GH_ORG_TOKEN }}
      - uses: action-pack/set-variable@v1
        with:
          name: 'docker_networks'
          value: '${{ inputs.docker_networks }}'
          token: ${{ secrets.GH_ORG_TOKEN }}

  display_variables:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ORG_TOKEN }}
      - name: summarise inputs
        run: |
          echo "## Base Config Variables" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.configure_base_folder }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.configure_git_files }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.configure_config_folder }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.configure_mounts }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.docker_image_owner }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.docker_image_name }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.docker_image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.docker_image_registry }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ vars.docker_networks }}" >> $GITHUB_STEP_SUMMARY



on:
  workflow_dispatch:
    inputs:
      runtime_privileged:
        type: boolean
        default: false
      runtime_virtual_host:
        default: 'pknw1.co.uk'
      runtime_virtual_port:
        default: '80'
      runtime_restart_policy:
        default: 'unless_stopped'
      puid_guid:
        default: '666:666'


jobs:
  init:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ORG_TOKEN }}


      privileged:
        description: 'Run in privileged '
        type: boolean
        default: 'false'
      docker_network:
        description: 'Docker Network'
        type: choice
        required: true
        default: 'proxy'
        options:
          - proxy
          - admin
          - proxy_admin
          - host
      vhost_name:
        description: 'URL'
        default: '.pknw1.co.uk'
      vhost_port:
        description: 'Virtual Port'
        default: '80'
